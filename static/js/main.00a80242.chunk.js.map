{"version":3,"sources":["components/Today/Today.js","components/WeatherInfo/WeatherInfo.js","components/Week/Week.js","components/Hours/Hours.js","App.js","index.js"],"names":["Today","props","className","Math","floor","cityInfo","hourly","temp","weather","description","src","icon","alt","coords","name","WeatherInfo","items","imgUrl","title","info","round","feels_like","clouds","humidity","wind_speed","map","item","index","key","Week","weekInner","useRef","useEffect","weekInnerCurrent","current","scrollingItems","event","scrollTo","left","scrollLeft","deltaY","behavior","addEventListener","removeEventListener","ref","daily","day","Date","dt","toLocaleString","weekday","month","min","max","Hours","hoursInner","hoursInnerCurrent","hour","minute","App","useState","value","setValue","setCoords","setCityInfo","active","setActive","error","setError","getCity","a","axios","get","getCoordsRes","lat","data","coord","lon","cityInfoRes","length","onChange","target","type","placeholder","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00a80242.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./today.scss\";\r\n\r\nconst Today = (props) => {\r\n  return (\r\n    <div className=\"today container\">\r\n      <div className=\"today-inner\">\r\n        <div className=\"today__info\">\r\n          <p className=\"today__info-text\">Сейчас</p>\r\n          <p className=\"today__info-temp\">\r\n            {Math.floor(props.cityInfo.hourly[0].temp)}&deg;\r\n          </p>\r\n          <div className=\"today__info-desc\">\r\n            {props.cityInfo.hourly[0].weather[0].description}\r\n          </div>\r\n        </div>\r\n        <img\r\n          className=\"today__icon\"\r\n          src={`https://openweathermap.org/img/wn/${props.cityInfo.hourly[0].weather[0].icon}@2x.png`}\r\n          alt=\"\"\r\n        ></img>\r\n      </div>\r\n      <p className=\"today__city\">Город: {props.coords.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","import React from \"react\";\r\n\r\nimport \"./weather-info.scss\";\r\n\r\nconst WeatherInfo = (props) => {\r\n  let items = [\r\n    {\r\n      imgUrl: \"img/temp.svg\",\r\n      title: \"Ощущается как:\",\r\n      info: `${Math.round(props.cityInfo.hourly[0].feels_like)}°`,\r\n    },\r\n    {\r\n      imgUrl: \"img/clouds.svg\",\r\n      title: \"Облачность:\",\r\n      info: `${props.cityInfo.hourly[0].clouds}%`,\r\n    },\r\n    {\r\n      imgUrl: \"img/wet.svg\",\r\n      title: \"Влажность:\",\r\n      info: `${props.cityInfo.hourly[0].humidity}%`,\r\n    },\r\n    {\r\n      imgUrl: \"img/wind.svg\",\r\n      title: \"Ветер:\",\r\n      info: `${Math.round(props.cityInfo.hourly[0].wind_speed)}м/с`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"weather-info container\">\r\n      <div className=\"weather-info-inner\">\r\n        <img className=\"weather__img\" src=\"img/clouds.webp\"></img>\r\n        {items.map((item, index) => (\r\n          <div className=\"weather__item\" key={index}>\r\n            <div className=\"weather__item-inner\">\r\n              <div className=\"weather__item-icon\">\r\n                <img src={item.imgUrl} alt=\"\"></img>\r\n              </div>\r\n              <p className=\"weather__item-title\">{item.title}</p>\r\n            </div>\r\n            <p className=\"weather__item-info\">{item.info}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Week = (props) => {\r\n  const weekInner = useRef();\r\n\r\n  useEffect(() => {\r\n    const weekInnerCurrent = weekInner.current;\r\n\r\n    if (weekInnerCurrent) {\r\n      const scrollingItems = (event) => {\r\n        weekInnerCurrent.scrollTo({\r\n          left: weekInnerCurrent.scrollLeft + event.deltaY * 8,\r\n          behavior: \"smooth\",\r\n        });\r\n      };\r\n      weekInnerCurrent.addEventListener(\"wheel\", scrollingItems);\r\n\r\n      return () =>\r\n        weekInnerCurrent.removeEventListener(\"wheel\", scrollingItems);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"week container\">\r\n      <div className=\"week-inner inner\" ref={weekInner}>\r\n        {props.cityInfo.daily.map((day, index) => (\r\n          <div className=\"week__item item\" key={index}>\r\n            <p className=\"week__item-date item__date\">\r\n              {new Date(day.dt * 1000).toLocaleString(\"ru\", {\r\n                weekday: \"short\",\r\n                month: \"numeric\",\r\n                day: \"numeric\",\r\n              })}\r\n            </p>\r\n            <img\r\n              className=\"week__item-img item__img\"\r\n              src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"week__item-temps item__temps\">\r\n              <p className=\"week__item-temp\">{Math.round(day.temp.min)}°</p>\r\n              <span>—</span>\r\n              <p className=\"week__item-temp\">{Math.round(day.temp.max)}°</p>\r\n            </div>\r\n            <p className=\"week__item-desc\">{day.weather[0].description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Hours = (props) => {\r\n  const hoursInner = useRef();\r\n\r\n  useEffect(() => {\r\n    const hoursInnerCurrent = hoursInner.current;\r\n\r\n    if (hoursInnerCurrent) {\r\n      const scrollingItems = (event) => {\r\n        hoursInnerCurrent.scrollTo({\r\n          left: hoursInnerCurrent.scrollLeft + event.deltaY * 8,\r\n          behavior: \"smooth\",\r\n        });\r\n      };\r\n      hoursInnerCurrent.addEventListener(\"wheel\", scrollingItems);\r\n\r\n      return () =>\r\n        hoursInnerCurrent.removeEventListener(\"wheel\", scrollingItems);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"hours container\">\r\n      <div className=\"hours-inner inner\" ref={hoursInner}>\r\n        {props.cityInfo.hourly.map((hour, index) => (\r\n          <div className=\"hours__item item\" key={index}>\r\n            <p className=\"hours__item-date item__date\">\r\n              {new Date(hour.dt * 1000).toLocaleString(\"ru\", {\r\n                weekday: \"short\",\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n              })}\r\n            </p>\r\n            <img\r\n              className=\"hours__item-img item__img\"\r\n              src={`https://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"hours__item-temp item__temp\">{Math.round(hour.temp)}°</div>\r\n            <div className=\"hours__item-desc\">\r\n              {hour.weather[0].description}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hours;\r\n","import React, { useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Today from \"./components/Today/Today\";\r\nimport WeatherInfo from \"./components/WeatherInfo/WeatherInfo\";\r\nimport Week from \"./components/Week/Week\";\r\nimport Hours from \"./components/Hours/Hours\";\r\n\r\nimport \"./app.scss\";\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [coords, setCoords] = useState([]);\r\n  const [cityInfo, setCityInfo] = useState([]);\r\n  const [active, setActive] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const getCity = async () => {\r\n    try {\r\n      const getCoordsRes = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${value}&units=metric&lang=ru&appid=130e08eebdc4d5e263118a6f823cbd81`\r\n      );\r\n      const lat = getCoordsRes.data.coord.lat;\r\n      const lon = getCoordsRes.data.coord.lon;\r\n\r\n      const cityInfoRes = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=130e08eebdc4d5e263118a6f823cbd81`\r\n      );\r\n\r\n      setCoords(getCoordsRes.data);\r\n      setCityInfo(cityInfoRes.data);\r\n      setValue(\"\");\r\n    } catch (err) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const onChangeInput = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cityInfo.length !== 0 ? \"wrapper\" : \"wrapper wrapper--active\"}\r\n    >\r\n      <header className=\"header\">\r\n        <div className=\"header__logo\">\r\n          <img className=\"header__logo-img\" src=\"img/logo.svg\" alt=\"\" />\r\n          <p className=\"header__logo-title\">React weather</p>\r\n        </div>\r\n        <div className=\"header__search\">\r\n          <input\r\n            onChange={onChangeInput}\r\n            value={value}\r\n            className=\"header__search-field\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск...\"\r\n          />\r\n          <button onClick={getCity} className=\"header__search-button\">\r\n            Найти\r\n          </button>\r\n        </div>\r\n      </header>\r\n      <div className={error ? \"error  error--active\" : \"error\"}>\r\n        <div className=\"error-inner\">\r\n          <div className=\"error-content container\">\r\n            <button\r\n              onClick={() => setError(false)}\r\n              className=\"error__button\"\r\n            ></button>\r\n            <h1 className=\"error__title\">Ошибка!</h1>\r\n            <img src=\"img/error.png\" alt=\"\" />\r\n            <p className=\"error__subtitle\">\r\n              Проверьте веденные данные или соединение с интернетом\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {cityInfo.length !== 0 && (\r\n        <main className=\"main\">\r\n          <div className=\"main__wrapper\">\r\n            <Today coords={coords} cityInfo={cityInfo} />\r\n            <WeatherInfo cityInfo={cityInfo} />\r\n          </div>\r\n          <div className=\"main__inner\">\r\n            <button onClick={() => setActive(!active)} className=\"main__button\">\r\n              {active ? \"По часам\" : \"На 8 дней\"}\r\n            </button>\r\n            {active ? (\r\n              <Hours cityInfo={cityInfo} />\r\n            ) : (\r\n              <Week cityInfo={cityInfo} />\r\n            )}\r\n          </div>\r\n        </main>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}